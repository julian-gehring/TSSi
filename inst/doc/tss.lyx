#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrartcl
\begin_preamble
%\VignetteIndexEntry{Introduction to the TSSi package: Identification of Transcription Start Sites}
%\VignettePackage{TSSi}

\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\textit{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}
\newcommand{\Rvar}[1]{{\textit{\textsf{#1}}}}

%% avoid single lines
\widowpenalty=10000
\clubpenalty=10000

%% format captions
\usepackage[small,bf,margin=.5cm]{caption}
\end_preamble
\use_default_options false
\begin_modules
sweave
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Introduction to the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Rpackage{TSSi}
\end_layout

\end_inset

 package:
\begin_inset Newline newline
\end_inset

Identification of Transcription Start Sites
\end_layout

\begin_layout Author
Julian Gehring, Clemens Kreutz
\end_layout

\begin_layout Chunk
<<settings, echo=FALSE>>=
\end_layout

\begin_layout Chunk
set.seed(1)
\end_layout

\begin_layout Chunk
options(width=65, SweaveHooks=list(fig=function() par(mar=c(5.1, 5.1, 4.1,
 1.1))))
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Along with the advances in high-throughput sequencing, the detection of
 transcription start sites 
\emph on
(TSS)
\emph default
 using CAP-capture techniques has evolved recently.
 While many experimental applications exist, is the analysis of such data
 still non-trivial.
 Approaching this, the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Rpackage{TSSi}
\end_layout

\end_inset

 package offers a flexible statistical preprocessing for CAP-capture data
 and an automated identification of start sites.
\end_layout

\begin_layout Section
Data set
\end_layout

\begin_layout Standard
In this vignette we use experimental CAP-capture data obtained with Solexa
 sequencing.
 The data was mapped to the genome using the bowtie algorithm and further
 processed, such that each the number of the 5' reads for each position
 are available.
 The data frame 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Rvar{readData}
\end_layout

\end_inset

 contains the chromosome, the strand, the 5' position of the reads, and
 the total number of reads at that position.
 Further, regions based on existing annotation are also provided; this is
 useful for performing the following the analysis steps.
\end_layout

\begin_layout Chunk
<<load_data>>=
\end_layout

\begin_layout Chunk
library(mTSS)
\end_layout

\begin_layout Chunk
data(readData)
\end_layout

\begin_layout Chunk
head(readData)
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Section
Segment read data
\end_layout

\begin_layout Standard
As a first step in the analysis, the read data is taken by the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Rmethod{segmentize}
\end_layout

\end_inset

 method.
 Here, the data is divided into 
\emph on
segments
\emph default
, for which the following analysis is performed independently.
 This is done based on the information of the chromosomes, the strands,
 and the optional regions.
 The segmented data is returned as an object of the class 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Rclass{TssData}
\end_layout

\end_inset

.
\end_layout

\begin_layout Chunk
<<segmentize>>=
\end_layout

\begin_layout Chunk
attach(readData)
\end_layout

\begin_layout Chunk
x <- segmentize(counts=counts, start=start, chr=chromosome, region=region,
 strand=strand)
\end_layout

\begin_layout Chunk
detach(readData)
\end_layout

\begin_layout Chunk
x
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Standard
The final segments and the associated read data can be assessed with several
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Rmethod{get}
\end_layout

\end_inset

 methods.
 The data from individual segments can be called either by its name or an
 index.
 Each segment can easily be visualized with the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Rmethod{plot}
\end_layout

\end_inset

 method.
\end_layout

\begin_layout Chunk

\end_layout

\begin_layout Chunk
<<get_segments>>=
\begin_inset Newline newline
\end_inset

segments(x)
\end_layout

\begin_layout Chunk
names(x)
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Chunk

\end_layout

\begin_layout Chunk
<<get_reads>>=
\end_layout

\begin_layout Chunk
head(reads(x, 3))
\end_layout

\begin_layout Chunk
head(start(x, 3))
\end_layout

\begin_layout Chunk
head(start(x, names(x)[3]))
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Section
Preprocessing
\end_layout

\begin_layout Standard
The data is preprocessed, assuming a Poisson distribution for the loss of
 bases around each TSS.
 The computation can be performed with a fast approximation of the distribution
 based on all reads, or fitted explicitly for each segment.
 On platforms supporting the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Rpackage{multicore}
\end_layout

\end_inset

 package, the fitting can be parallelized over multiple processor cores
 in order to increase computing speed.
\end_layout

\begin_layout Chunk
<<normalize_ratio>>=
\end_layout

\begin_layout Chunk
yRatio <- normalize(x)
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Chunk

\end_layout

\begin_layout Chunk
<<normalize_fit>>=
\end_layout

\begin_layout Chunk
yFit <- normalize(x, fit=TRUE)
\end_layout

\begin_layout Chunk
yFit
\end_layout

\begin_layout Chunk
head(reads(yFit, 3))
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Chunk

\end_layout

\begin_layout Chunk
<<plot_normalize_fit, fig=TRUE, echo=TRUE>>=
\end_layout

\begin_layout Chunk
plot(yFit, 3)
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Section
Identifying Start Sites
\end_layout

\begin_layout Standard
For identifying the TSS, peaks in the normalized counts are detected.
 Reads below an exponential background are iteratively added to the neighboring
 peaks.
\end_layout

\begin_layout Chunk
<<identify>>=
\end_layout

\begin_layout Chunk
z <- identify(yFit)
\end_layout

\begin_layout Chunk
z
\end_layout

\begin_layout Chunk
head(segments(z))
\end_layout

\begin_layout Chunk
head(tss(z, 3))
\end_layout

\begin_layout Chunk
head(reads(z, 3))
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Chunk

\end_layout

\begin_layout Chunk
<<plot_identify, fig=TRUE, echo=TRUE>>=
\end_layout

\begin_layout Chunk
plot(z, 3)
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Section
Customizing figures
\end_layout

\begin_layout Standard
The 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Rmethod{plot}
\end_layout

\end_inset

 method allows for a simple, but powerful customization of the produced
 figures.
 To each element of the graphic, all possible arguments can be set, supplying
 them in the form of named lists.
 In the following, we omit the the plotting of the threshold and the ratio
 estimates, as well as adapt the representation of some components.
 For a detailed description on the individual settings, please refer to
 the manual pages of the package.
\end_layout

\begin_layout Chunk

\end_layout

\begin_layout Chunk
<<plot_custom, fig=TRUE, echo=TRUE>>=
\end_layout

\begin_layout Chunk
plot(z, 4, ratio=FALSE, threshold=FALSE, baseline=FALSE, countsArgs=list(type="h
", col="darkgray", pch=NA), plotArgs=list(xlab="Genomic position", main="TSS
 for segment 's1_-_155'"))
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section*
Session info
\end_layout

\begin_layout Chunk
<<sessionInfo, results=tex, echo=FALSE>>=
\end_layout

\begin_layout Chunk
toLatex(sessionInfo(), locale=FALSE)
\end_layout

\begin_layout Chunk
@
\end_layout

\end_body
\end_document
